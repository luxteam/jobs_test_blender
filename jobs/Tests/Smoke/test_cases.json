[
	{
		"case": "BL28_SM_001",
		"status": "active",
		"functions": [
			"check_test_cases_success_save"
		],
		"script_info": [
			"Install RPR"
		],
		"scene": "rpr_default.blend"
	},
	{
		"case": "BL28_SM_002",
		"status": "active",
		"functions": [
			"check_test_cases_success_save"
		],
		"script_info": [
			"Select RPR"
		],
		"scene": "rpr_default.blend"
	},
	{
		"case": "BL28_SM_003",
		"status": "active",
		"functions": [
			"check_test_cases_success_save"
		],
		"script_info": [
			"Open RPR scene"
		],
		"scene": "rpr_default.blend"
	},
	{
		"case": "BL28_SM_004",
		"status": "active",
		"functions": [
			"rpr_render(case)"
		],
		"script_info": [
			"Render empty scene",
			"Pass Limit: 50"
		],
		"scene": "rpr_default.blend"
	},
	{
		"case": "BL28_SM_005",
		"status": "active",
		"functions": [
			"scene = bpy.context.scene",
			"set_value(scene.world.rpr, 'enabled', False)",
			"light = bpy.data.lights['Lamp']",
			"set_value(light, 'type', 'POINT')",
			"set_value(light.rpr, 'intensity', 100)",
			"bpy.ops.image.open(filepath='//Maps//1.ies', directory=RES_PATH + '//Maps//', files=[{'name':'1.ies'}], relative_path=True, show_multiview=False)",
			"set_value(light.rpr, 'ies_file', bpy.data.images['1.ies'])",
			"rpr_render(case)",
			"light = bpy.data.lights['Lamp']",
			"set_value(light.rpr, 'ies_file_name', '')"
		],
		"script_info": [
			"IES",
			"Pass Limit: 50"
		],
		"scene": "IES.blend"
	},
	{
		"case": "BL28_SM_006",
		"status": "active",
		"functions": [
			"bpy.data.objects['Cube'].hide_render = True",
			"fbx_path = os.path.join(RES_PATH, '1.fbx')",
			"bpy.ops.import_scene.fbx(filepath=fbx_path, global_scale=10)",
			"rpr_render(case)"
		],
		"script_info": [
			"Import FBX",
			"Pass Limit: 50"
		],
		"scene": "rpr_default.blend"
	},
	{
		"case": "BL28_SM_007",
		"status": "active",
		"functions": [
			"bpy.data.objects['shader_ball'].hide_render = True",
			"obj_path = os.path.join(RES_PATH, '1.obj')",
			"bpy.ops.import_scene.obj(filepath=obj_path)",
			"rpr_render(case)",
			"bpy.data.objects['shader_ball.001'].hide_render = True",
			"bpy.data.objects['shader_ball'].hide_render = False"
		],
		"script_info": [
			"Import OBJ",
			"Pass Limit: 50"
		],
		"scene": "default.blend"
	},
	{
		"case": "BL28_SM_008",
		"status": "active",
		"functions": [
			"uber_material = bpy.data.materials.new('Uber')",
			"uber_material.use_nodes = True",
			"bpy.data.objects['shader_ball'].active_material = uber_material",
			"tree = uber_material.node_tree",
			"uber_node = tree.nodes.new(type='RPRShaderNodeUber')",
			"output_node = tree.nodes['Material Output']",
			"tree.links.new(uber_node.outputs[0], output_node.inputs[0])",
			"uber_node.inputs['Diffuse Color'].default_value = (0.8, 0.0154239, 0.00939292, 1)",
			"rpr_render(case)",
			"bpy.data.objects['shader_ball'].active_material = bpy.data.materials['Default']"
		],
		"script_info": [
			"RPR Uber material",
			"Pass Limit: 50"
		],
		"scene": "default.blend"
	},
	{
		"case": "BL28_SM_009",
		"status": "active",
		"functions": [
			"scene = bpy.context.scene",
			"set_value(scene.world.rpr, 'enabled', True)",
			"set_value(scene.world.rpr, 'mode', 'SUN_SKY')",
			"rpr_render(case)",
			"scene = bpy.context.scene",
			"set_value(scene.world.rpr, 'enabled', False)"
		],
		"script_info": [
			"Sun_Sky",
			"Pass Limit: 50"
		],
		"scene": "default.blend"
	},
	{
		"case": "BL28_SM_010",
		"status": "active",
		"functions": [
			"scene = bpy.context.scene",
			"set_value(scene.world.rpr, 'enabled', True)",
			"set_value(scene.world.rpr, 'mode', 'IBL')",
			"rpr_render(case)"
		],
		"script_info": [
			"IBL",
			"Pass Limit: 50"
		],
		"scene": "default.blend"
	},
	{
		"case": "BL28_SM_011",
		"status": "active",
		"functions": [
			"scene = bpy.context.scene",
			"set_value(scene.world.rpr, 'enabled', True)",
			"set_value(scene.world.rpr, 'mode', 'IBL')",
			"bpy.ops.image.open(filepath='//Maps//Tropical_Beach_3k.hdr', directory=RES_PATH + '//Maps//', files=[{'name':'Tropical_Beach_3k.hdr'}], relative_path=True, show_multiview=False)",
			"set_value(scene.world.rpr.ibl, 'image', bpy.data.images['Tropical_Beach_3k.hdr'])",
			"rpr_render(case)",
			"scene = bpy.context.scene",
			"set_value(scene.world.rpr, 'enabled', True)",
			"set_value(scene.world.rpr, 'mode', 'IBL')",
			"set_value(scene.world.rpr.ibl, 'image', None)"
		],
		"script_info": [
			"IBL with HDR",
			"Pass Limit: 50"
		],
		"scene": "default.blend"
	},
	{
		"case": "BL28_SM_012",
		"status": "active",
		"functions": [
			"scene = bpy.context.scene",
			"set_value(scene.world.rpr, 'enabled', True)",
			"set_value(scene.world.rpr, 'mode', 'IBL')",
			"bpy.ops.image.open(filepath='//Maps//ibl_test.exr', directory=RES_PATH + '//Maps//', files=[{'name':'ibl_test.exr'}], relative_path=True, show_multiview=False)",
			"set_value(scene.world.rpr.ibl, 'image', bpy.data.images['ibl_test.exr'])",
			"rpr_render(case)",
			"bpy.ops.wm.open_mainfile(filepath=os.path.join(RES_PATH, 'default.blend'))"
		],
		"script_info": [
			"IBL with EXR",
			"Pass Limit: 50"
		],
		"scene": "default.blend"
	},
	{
		"case": "BL28_SM_013",
		"status": "active",
		"functions": [
			"set_value(scene.rpr.limits, 'max_samples', 1)",
			"rpr_render(case)",
			"set_value(scene.rpr.limits, 'max_samples', 50)"
		],
		"script_info": [
			"Render 1 pass"
		],
		"scene": "default.blend"
	},
	{
		"case": "BL28_SM_014",
		"status": "active",
		"functions": [
			"set_value(scene.rpr.limits, 'max_samples', 100)",
			"rpr_render(case)",
			"set_value(scene.rpr.limits, 'max_samples', 50)"
		],
		"script_info": [
			"Render 100 pass"
		],
		"scene": "default.blend"
	},
	{
		"case": "BL28_SM_015",
		"status": "active",
		"functions": [
			"set_value(scene.rpr.limits, 'max_samples', 500)",
			"rpr_render(case)",
			"set_value(scene.rpr.limits, 'max_samples', 50)"
		],
		"script_info": [
			"Render 500 pass"
		],
		"scene": "default.blend"
	},
	{
		"case": "BL28_SM_016",
		"status": "active",
		"functions": [
			"scene = bpy.context.scene",
			"set_value(scene.rpr, 'use_tile_render', True)",
			"scene = bpy.context.scene",
			"set_value(scene.rpr, 'use_tile_render', False)",
			"rpr_render(case)",
			"scene = bpy.context.scene",
			"set_value(scene.rpr, 'use_tile_render', False)"
		],
		"script_info": [
			"Tile Rendering"
		],
		"scene": "default.blend"
	},
	{
		"case": "BL28_SM_017",
		"status": "active",
		"functions": [
			"scene = bpy.context.scene",
			"set_value(scene.display_settings, 'display_device', 'sRGB')",
			"set_value(scene.view_settings, 'view_transform', 'Filmic')",
			"set_value(scene.view_settings, 'look', 'None')",
			"scene = bpy.context.scene",
			"set_value(scene.display_settings, 'display_device', 'sRGB')",
			"set_value(scene.view_settings, 'view_transform', 'Filmic')",
			"set_value(scene.view_settings, 'look', 'None')",
			"rpr_render(case)",
			"scene = bpy.context.scene",
			"set_value(scene.display_settings, 'display_device', 'sRGB')",
			"set_value(scene.view_settings, 'view_transform', 'Filmic')",
			"set_value(scene.view_settings, 'look', 'None')"
		],
		"script_info": [
			"Color Management (sRGB)"
		],
		"scene": "default.blend"
	},
	{
		"case": "BL28_SM_018",
		"status": "active",
		"functions": [
			"scene = bpy.context.scene",
			"set_value(scene.display_settings, 'display_device', 'sRGB')",
			"set_value(scene.view_settings, 'view_transform', 'Filmic')",
			"set_value(scene.view_settings, 'look', 'Filmic - Very High Contrast')",
			"rpr_render(case)",
			"scene = bpy.context.scene",
			"set_value(scene.display_settings, 'display_device', 'sRGB')",
			"set_value(scene.view_settings, 'view_transform', 'Filmic')",
			"set_value(scene.view_settings, 'look', 'None')"
		],
		"script_info": [
			"Color Management (Look)"
		],
		"scene": "default.blend"
	},
	{
		"case": "BL28_SM_019",
		"status": "active",
		"functions": [
			"scene = bpy.context.scene",
			"set_value(scene.rpr, 'use_render_stamp', True)",
			"scene = bpy.context.scene",
			"set_value(scene.rpr, 'use_render_stamp', False)",
			"rpr_render(case)",
			"scene = bpy.context.scene",
			"set_value(scene.rpr, 'use_render_stamp', False)"
		],
		"script_info": [
			"Render Stamp",
			"Pass Limit: 50"
		],
		"scene": "default.blend"
	},
	{
		"case": "BL28_SM_020",
		"status": "skipped",
		"functions": [
			"rpr_render(case)"
		],
		"script_info": [
			"Render mode wireframe",
			"Pass Limit: 50"
		],
		"scene": "default.blend"
	},
	{
		"case": "BL28_SM_021",
		"status": "active",
		"functions": [
			"set_value(scene.render, 'resolution_x', 1280)",
			"set_value(scene.render, 'resolution_y', 720)",
			"rpr_render(case)",
			"set_value(scene.render, 'resolution_x', 1920)",
			"set_value(scene.render, 'resolution_y', 1080)"
		],
		"script_info": [
			"Image size 720HD",
			"Pass Limit: 50"
		],
		"scene": "default.blend"
	},
	{
		"case": "BL28_SM_022",
		"status": "active",
		"functions": [
			"set_value(scene.render, 'resolution_x', 1500)",
			"set_value(scene.render, 'resolution_y', 1125)",
			"rpr_render(case)",
			"set_value(scene.render, 'resolution_x', 1920)",
			"set_value(scene.render, 'resolution_y', 1080)"
		],
		"script_info": [
			"Image size 1500 1125",
			"Pass Limit: 50"
		],
		"scene": "default.blend"
	},
	{
		"case": "BL28_SM_023",
		"status": "active",
		"functions": [
			"scene = bpy.context.scene",
			"set_value(scene.render.image_settings, 'file_format', 'PNG')",
			"rpr_render(case)"
		],
		"script_info": [
			"PNG format",
			"Pass Limit: 50"
		],
		"scene": "default.blend",
		"extension": ".png"
	},
	{
		"case": "BL28_SM_024",
		"status": "active",
		"functions": [
			"rpr_render(case)"
		],
		"script_info": [
			"JPG format",
			"Pass Limit: 50"
		],
		"scene": "default.blend"
	},
	{
		"case": "BL28_SM_025",
		"status": "active",
		"functions": [
			"view_layer = bpy.context.view_layer",
			"set_value(view_layer.rpr.denoiser, 'enable', True)",
			"set_value(view_layer.rpr.denoiser, 'filter_type', 'EAW')",
			"rpr_render(case)",
			"view_layer = bpy.context.view_layer",
			"set_value(view_layer.rpr.denoiser, 'enable', False)"
		],
		"script_info": [
			"Denoiser EAW",
			"Pass Limit: 50"
		],
		"scene": "DualCpu.blend"
	},
	{
		"case": "BL28_SM_026",
		"status": "active",
		"functions": [
			"view_layer = bpy.context.view_layer",
			"set_value(view_layer.rpr.denoiser, 'enable', True)",
			"set_value(view_layer.rpr.denoiser, 'filter_type', 'LWR')",
			"rpr_render(case)",
			"view_layer = bpy.context.view_layer",
			"set_value(view_layer.rpr.denoiser, 'enable', False)"
		],
		"script_info": [
			"Denoiser LWR",
			"Pass Limit: 50"
		],
		"scene": "DualCpu.blend"
	},
	{
		"case": "BL28_SM_027",
		"status": "active",
		"functions": [
			"view_layer = bpy.context.view_layer",
			"set_value(view_layer.rpr.denoiser, 'enable', True)",
			"set_value(view_layer.rpr.denoiser, 'filter_type', 'BILATERAL')",
			"rpr_render(case)",
			"view_layer = bpy.context.view_layer",
			"set_value(view_layer.rpr.denoiser, 'enable', False)"
		],
		"script_info": [
			"Denoiser Bilateral",
			"Pass Limit: 50"
		],
		"scene": "DualCpu.blend"
	},
	{
		"case": "BL28_SM_028",
		"status": "active",
		"functions": [
			"view_layer = bpy.context.view_layer",
			"set_value(view_layer.rpr.denoiser, 'enable', True)",
			"set_value(view_layer.rpr.denoiser, 'filter_type', 'ML')",
			"rpr_render(case)",
			"view_layer = bpy.context.view_layer",
			"set_value(view_layer.rpr.denoiser, 'enable', False)"
		],
		"script_info": [
			"Denoiser ML",
			"Pass Limit: 50"
		],
		"scene": "DualCpu.blend",
		"skip_config": [
            ["AMD Radeon VII"]
        ]
	},
	{
		"case": "BL28_SM_029",
		"status": "active",
		"functions": [
			"principled_bsdf_material = bpy.data.materials.new('Principled BSDF')",
			"principled_bsdf_material.use_nodes = True",
			"bpy.data.objects['shader_ball'].active_material = principled_bsdf_material",
			"tree = principled_bsdf_material.node_tree",
			"principled_bsdf_node = tree.nodes['Principled BSDF']",
			"principled_bsdf_node.inputs['Base Color'].default_value = (0.00643981, 0.8, 0.0358057, 1)",
			"rpr_render(case)",
			"bpy.data.objects['shader_ball'].active_material = bpy.data.materials['Default']"
		],
		"script_info": [
			"Principled BSDF",
			"Pass Limit: 50"
		],
		"scene": "default.blend"
	},
	{
		"case": "BL28_SM_030",
		"status": "active",
		"functions": [
			"material_name = 'Gold.xml'",
			"xml_path = os.path.join(material_library.path.get_library_path(), material_name.split('.')[0], material_name)",
			"gold_material = bpy.data.materials.new('Gold')",
			"gold_material.use_nodes = True",
			"bpy.data.objects['shader_ball'].active_material = gold_material",
			"material_library.import_xml_material(gold_material, material_name, xml_path, False)",
			"rpr_render(case)",
			"bpy.data.objects['shader_ball'].active_material = bpy.data.materials['Default']"
		],
		"script_info": [
			"Mat lib",
			"Pass Limit: 50"
		],
		"scene": "default.blend"
	},
	{
		"case": "BL28_SM_031",
		"status": "active",
		"functions": [
			"scene = bpy.context.scene",
			"view_layer = bpy.context.view_layer",
			"deactivate_all_aovs(view_layer)",
			"set_value(scene.render.image_settings, 'file_format', 'JPEG')",
			"set_value(view_layer, 'use', True)",
			"set_value(scene.render, 'use_single_layer', False)",
			"set_value(scene, 'use_nodes', True)",
			"nodes = bpy.data.scenes[0].node_tree.nodes",
			"deleteOldRenderLayerNodes(nodes)",
			"render_layer = nodes.new('CompositorNodeRLayers')",
			"composite = nodes.new('CompositorNodeComposite')",
			"file_output = nodes.new('CompositorNodeOutputFile')",
			"scene.node_tree.links.new(render_layer.outputs['Image'], composite.inputs['Image'])",
			"file_output.base_path = os.path.join(WORK_DIR, 'Color')",
			"file_output.file_slots.new('BL28_SM_031')",
			"view_layer.rpr.enable_aovs[7] = True",
			"scene.node_tree.links.new(render_layer.outputs['Geometric Normal'], file_output.inputs[1])",
			"test_case_image = os.path.join(WORK_DIR, 'Color', 'BL28_SM_031' + '.jpg')",
			"aov_image = os.path.join(WORK_DIR, 'Color', 'BL28_SM_031' + '0001.jpg')",
			"if os.path.exists(test_case_image):",
			"os.remove(test_case_image)",
			"if os.path.exists(aov_image):",
			"os.rename(aov_image, test_case_image)",
			"view_layer = bpy.context.view_layer",
			"deactivate_all_aovs(view_layer)",
			"view_layer.rpr.enable_aovs[0] = True",
			"nodes = bpy.data.scenes[0].node_tree.nodes",
			"deleteOldRenderLayerNodes(nodes)",
			"rpr_render(case)",
			"test_case_image = os.path.join(WORK_DIR, 'Color', 'BL28_SM_031' + '.jpg')",
			"aov_image = os.path.join(WORK_DIR, 'Color', 'BL28_SM_031' + '0001.jpg')",
			"if os.path.exists(test_case_image):",
			"os.remove(test_case_image)",
			"if os.path.exists(aov_image):",
			"os.rename(aov_image, test_case_image)",
			"view_layer = bpy.context.view_layer",
			"deactivate_all_aovs(view_layer)",
			"view_layer.rpr.enable_aovs[0] = True",
			"nodes = bpy.data.scenes[0].node_tree.nodes",
			"deleteOldRenderLayerNodes(nodes)"
		],
		"script_info": [
			"AOV Geometric Normal",
			"Pass Limit: 50"
		],
		"scene": "default.blend",
        "skip_engine": [
            "LOW", "MEDIUM", "HIGH"
        ]
	},
	{
		"case": "BL28_SM_032",
		"status": "active",
		"functions": [
			"scene = bpy.context.scene",
			"set_value(scene.world.rpr, 'enabled', False)",
			"light = bpy.data.lights['Light']",
			"set_value(light, 'type', 'AREA')",
			"rpr_render(case)",
			"scene = bpy.context.scene",
			"set_value(scene.world.rpr, 'enabled', True)",
			"light = bpy.data.lights['Light']",
			"set_value(light, 'type', 'POINT')"
		],
		"script_info": [
			"Area light",
			"Pass Limit: 50"
		],
		"scene": "default.blend"
	},
	{
		"case": "BL28_SM_033",
		"status": "active",
		"functions": [
			"obj = bpy.data.objects['Suzanne']",
			"bpy.context.view_layer.objects.active = obj",
			"obj.select_set(state=True)",
			"bpy.ops.object.duplicate(linked=True)",
			"obj.location.z += 1.3",
			"rpr_render(case)"
		],
		"script_info": [
			"Instances",
			"Pass Limit: 50"
		],
		"scene": "instances.blend"
	},
	{
		"case": "BL28_SM_034",
		"status": "active",
		"functions": [
			"rpr_render(case)"
		],
		"script_info": [
			"5 lights",
			"Pass Limit: 50"
		],
		"scene": "5_lights.blend"
	},
	{
		"case": "BL28_SM_035",
		"status": "active",
		"functions": [
			"rpr_render(case)"
		],
		"script_info": [
			"AOV SC",
			"Pass Limit: 50"
		],
		"scene": "AOV_SC.blend"
	},
	{
		"case": "BL28_SM_036",
		"status": "active",
		"functions": [
			"rpr_render(case)"
		],
		"script_info": [
			"SSS",
			"Pass Limit: 50"
		],
		"scene": "SSS_Test.blend"
	},
	{
		"case": "BL28_SM_037",
		"status": "active",
		"functions": [
			"rpr_render(case)"
		],
		"script_info": [
			"Displacement",
			"Pass Limit: 50"
		],
		"scene": "Displacement.blend"
	},
	{
		"case": "BL28_SM_038",
		"status": "active",
		"functions": [
			"scene = bpy.context.scene",
			"set_value(scene.rpr, 'max_ray_depth', 15)",
			"set_value(scene.rpr, 'refraction_depth', 10)",
			"scene = bpy.context.scene",
			"set_value(scene.rpr, 'max_ray_depth', 8)",
			"set_value(scene.rpr, 'refraction_depth', 5)",
			"rpr_render(case)",
			"scene = bpy.context.scene",
			"set_value(scene.rpr, 'max_ray_depth', 8)",
			"set_value(scene.rpr, 'refraction_depth', 5)",
			"['BL28_SM_038', ['Quality', 'Pass Limit: 50'], activate_medium_quality, deactivate_medium_quality, 'WaterInsideGlass.blend', 50],"
		],
		"script_info": [
			"Quality",
			"Pass Limit: 50"
		],
		"scene": "WaterInsideGlass.blend"
	},
	{
		"case": "BL28_SM_039",
		"status": "active",
		"functions": [
			"pre39()",
			"rpr_render(case)",
			"post39()"
		],
		"script_info": [
			"IPR"
		],
		"scene": "default.blend"
	},
	{
		"case": "BL28_SM_040",
		"status": "active",
		"functions": [
			"shader_ball = bpy.data.objects['shader_ball']",
			"shader_ball.select_set(True)",
			"bpy.context.view_layer.objects.active = shader_ball",
			"bpy.ops.object.particle_system_add()",
			"bpy.data.particles['ParticleSettings'].type = 'HAIR'",
			"rpr_render(case)"
		],
		"script_info": [
			"Hair",
			"Pass Limit: 50"
		],
		"scene": "default.blend"
	},
	{
		"case": "BL28_SM_041",
		"status": "active",
		"functions": [
			"scene = bpy.context.scene",
			"set_value(scene.render, 'film_transparent', True)",
			"rpr_render(case)",
			"scene = bpy.context.scene",
			"set_value(scene.render, 'film_transparent', False)"
		],
		"script_info": [
			"Transparent Background",
			"Pass Limit: 50"
		],
		"scene": "AOV_SC.blend"
	},
	{
		"case": "BL28_SM_042",
		"status": "active",
		"functions": [
			"rpr_render(case)"
		],
		"script_info": [
			"Volumetric Light",
			"Pass Limit: 50"
		],
		"scene": "Volume.blend"
	},
	{
		"case": "BL28_SM_043",
		"status": "active",
		"functions": [
			"view_layer = bpy.context.view_layer",
            "set_value(bpy.context.scene.rpr.limits, 'min_samples', 25)",
            "set_value(bpy.context.scene.rpr.limits, 'max_samples', 16)",
			"set_value(view_layer.rpr.denoiser, 'enable', True)",
			"set_value(view_layer.rpr.denoiser, 'filter_type', 'ML')",
			"set_value(view_layer.rpr.denoiser, 'ml_color_only', True)",
			"render_device_settings = get_user_settings().final_devices",
			"set_value(render_device_settings, 'cpu_state', True)",
			"render_device_settings.gpu_states[0] = False",
            "rpr_render(case)",
			"set_value(view_layer.rpr.denoiser, 'enable', False)"
		],
		"script_info": [
			"ML in CPU mode"
		],
		"scene": "DualCpu.blend",
		"skip_config": [
            ["AMD Radeon VII"]
        ],
        "skip_engine": [
            "LOW", "MEDIUM", "HIGH"
        ]
	},
	{
		"case": "BL28_SM_044",
		"status": "skipped",
		"functions": [
			"view_layer = bpy.context.view_layer",
            "set_value(bpy.context.scene.rpr.limits, 'min_samples', 25)",
            "set_value(bpy.context.scene.rpr.limits, 'max_samples', 16)",
			"set_value(view_layer.rpr.denoiser, 'enable', True)",
			"set_value(view_layer.rpr.denoiser, 'filter_type', 'ML')",
			"set_value(view_layer.rpr.denoiser, 'ml_color_only', True)",
			"render_device_settings = get_user_settings().final_devices",
			"render_device_settings.gpu_states[0] = True",
			"set_value(render_device_settings, 'cpu_state', True)",
			"rpr_render(case)",
			"set_value(view_layer.rpr.denoiser, 'enable', False)"
		],
		"script_info": [
			"ML in dual mode"
		],
		"scene": "DualCpu.blend",
		"skip_config": [
            ["AMD Radeon VII"]
        ],
        "skip_engine": [
            "LOW", "MEDIUM", "HIGH"
        ]
	},
	{
		"case": "BL28_SM_045",
		"status": "active",
		"functions": [
            "set_value(bpy.context.scene.rpr.limits, 'min_samples', 25)",
            "set_value(bpy.context.scene.rpr.limits, 'max_samples', 16)",
			"render_device_settings = get_user_settings().final_devices",
			"set_value(render_device_settings, 'cpu_state', True)",
			"render_device_settings.gpu_states[0] = False",
            "rpr_render(case)"
		],
		"script_info": [
			"CPU mode"
		],
		"scene": "DualCpu.blend",
        "skip_engine": [
            "LOW", "MEDIUM", "HIGH"
        ]
	},
	{
		"case": "BL28_SM_046",
		"status": "active",
		"functions": [
            "set_value(bpy.context.scene.rpr.limits, 'min_samples', 25)",
            "set_value(bpy.context.scene.rpr.limits, 'max_samples', 16)",
			"render_device_settings = get_user_settings().final_devices",
			"render_device_settings.gpu_states[0] = True",
			"set_value(render_device_settings, 'cpu_state', True)",
			"rpr_render(case)"
		],
		"script_info": [
			"Dual mode"
		],
		"scene": "DualCpu.blend",
        "skip_engine": [
            "LOW", "MEDIUM", "HIGH"
        ]
	},
	{
		"case": "BL28_SM_047",
		"status": "active",
		"functions": [
			"rpr_render(case)"
		],
		"script_info": [
			"Complex 1"
		],
		"scene": "1_ComplexLighting.blend"
	},
	{
		"case": "BL28_SM_048",
		"status": "active",
		"functions": [
			"rpr_render(case)"
		],
		"script_info": [
			"Complex 2"
		],
		"scene": "2_chevrolet_corvette_stingray_c7RPR.blend"
	},
	{
		"case": "BL28_SM_049",
		"status": "active",
		"functions": [
			"rpr_render(case)"
		],
		"script_info": [
			"Complex 3"
		],
		"scene": "3_BridgeBooble.blend"
	},
	{
		"case": "BL28_SM_050",
		"status": "active",
		"functions": [
			"rpr_render(case)"
		],
		"script_info": [
			"Complex 4"
		],
		"scene": "4_fsr_modes.blend"
	},
	{
		"case": "BL28_SM_051",
		"status": "active",
		"functions": [
			"rpr_render(case)"
		],
		"script_info": [
			"Complex 5"
		],
		"scene": "5_EnvyScene.blend"
	},
	{
		"case": "BL28_SM_052",
		"status": "active",
		"functions": [
			"rpr_render(case)"
		],
		"script_info": [
			"Complex 6"
		],
		"scene": "6_IvyColumn.blend"
	},
	{
		"case": "BL28_SM_053",
		"status": "active",
		"functions": [
			"rpr_render(case)"
		],
		"script_info": [
			"Complex 7"
		],
		"scene": "7_render_passes.blend"
	},
	{
		"case": "BL28_SM_054",
		"status": "active",
		"functions": [
			"rpr_render(case)"
		],
		"script_info": [
			"Complex 8"
		],
		"scene": "8_.blend"
	},
	{
		"case": "BL28_SM_055",
		"status": "active",
		"functions": [
			"rpr_render(case)"
		],
		"script_info": [
			"Complex 9"
		],
		"scene": "9_sun_light.blend"
	},
	{
		"case": "BL28_SM_056",
		"status": "active",
		"functions": [
			"rpr_render(case)"
		],
		"script_info": [
			"Complex 10"
		],
		"scene": "10_Barcelona_Pavillion.blend"
	},
	{
		"case": "BL28_SM_057",
		"status": "active",
		"functions": [
			"rpr_render(case)"
		],
		"script_info": [
			"Visibility"
		],
		"scene": "Visibility.blend"
	}
]